@model IEnumerable<MvcMovie.Models.Movie>

@foreach (var item in Model) {
        @Html.DisplayFor(T=>item.Title)
}

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">

    window.onerror = function (message, url, lineNo) {
        console.log('Error: ' + message + '\n' + 'Line Number: ' + lineNo);

        return true;
    }

    $(document).ready(function () {

        $("#urlbutton").on("click", function (event) {
            //debugger;
            var siteId = $('#url').data('siteId');
            var idUrl = { "id":siteId, "url": $("#url").val() };

            var json = JSON.stringify(idUrl);

            $.ajax({
                url: '/Browser/SetURL',
                data: json,
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (id) {
                    // get the result and do some magic with it
                    //debugger;
                    $.ajax({
                        url: '/SeletElement',
                        data: JSON.stringify({"siteId": id}),
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            // get the result and do some magic with it
                            //SelectElment will return a view which contains the iframe that will request Browser/Index.
                            //Browser/Index acutally returns the content of job searching sites.
                            //So the content inside the iframe will be thought of as safety
                            var w = window.open();
                            w.document.open(data);
                            w.document.write(data);
                            w.document.close();
                        }
                    });
                }
            });
        });

        //Get all the websites
        var websites = [];
        $.ajax({
            type: "GET",
            url: "/Browser/GetUrls",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (urls) {
                $(urls).each(function () {
                    var url = this.url;
                    var opt = '<option>' + url + '</option>';
                    $('#website').append(opt);
                    $('#website option').last().attr("value", this.ID);
                });
            }
        });

        $('#website').change(function () {
            $('#url').text($('#website :selected').text());
            //can not set the siteId to the value of textarea becasue the value of textarea is actually changing the its text()
            $('#url').data('siteId', $(this).children(':selected').val());
        });

        $('#url').click(function () {
            $('#website').val(null);
            $(this).data('siteId', 0);
        });

    });

</script>

<style>
    .top2{
        margin-top:2%;
    }

</style>

<br />
<br />
<div class="h4"><strong>Your Favorite Job Seraching Websites:</strong></div>
<div class="row">
    <div class="col-xs-6">
        <div class="input-group input-group-sm">
            <span class="input-group-addon">URL</span>
            <textarea id="url" class="form-control"></textarea>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xs-6">
        <select class="form-control top2" id="website" size="5"></select>
        <button class="btn btn-primary btn-sm top2" id="urlbutton">OpenBrowser</button>
    </div>
</div>

<br />
<br />    
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ReleaseDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Genre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rating)
        </th>

        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReleaseDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Genre)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Rating)
        </td>

        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>
