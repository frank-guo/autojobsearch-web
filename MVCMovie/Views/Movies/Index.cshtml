@*@model IEnumerable<MvcMovie.Models.Movie>*@
@model MVCMovie.Models.RecruitingSite


<script type="text/javascript">

    window.onerror = function (message, url, lineNo) {
        console.log('Error: ' + message + '\n' + 'Line Number: ' + lineNo);

        return true;
    }

    $(document).ready(function () {

        // $("#urlbutton").on("click", function (event) {
        function openBrower(){
            var siteId = $('#url').data('siteId');
            var idUrl = { "id":siteId, "url": $("#url").val() };

            var json = JSON.stringify(idUrl);

            $.ajax({
                url: '/Browser/SetURL',
                data: json,
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (id) {
                    // get the result and do some magic with it
                    $.ajax({
                        url: '/SeletElement',
                        data: JSON.stringify({"siteId": id}),
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            // get the result and do some magic with it
                            //SelectElment will return a view which contains the iframe that will request Browser/Index/siteId.
                            //Browser/Index/siteId acutally returns the content of job searching sites.
                            //So the content inside the iframe will be thought of as safety
                            var w = window.open();
                            w.document.open(data);
                            w.document.write(data);
                            w.document.close();
                        }
                    });
                }
            });
        }

        //Get all the websites
        /*
        $.ajax({
            type: "GET",
            url: "/Browser/GetUrls",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (urls) {
                $(urls).each(function () {
                    var url = this.url;
                    var opt = '<option>' + url + '</option>';
                    $('#website').append(opt);
                    $('#website option').last().attr("value", this.ID);
                });
            }
        });
        */


        $('#website').change(function () {
            $('#url').text($('#website :selected').text());
            //can not set the siteId to the value of textarea becasue the value of textarea is actually changing the its text()
            $('#url').data('siteId', $(this).children(':selected').val());
        });

        $('#url').click(function () {
            $('#website').val(null);
            $(this).data('siteId', 0);
        });

        $('#sitesForm').submit(function (event) {
            openBrower();
            event.preventDefault();
        });

    });

</script>

<style>
    .top2{
        margin-top:2%;
    }

</style>

@using (Html.BeginForm(null, null, FormMethod.Post, new {@id = "sitesForm"}))
{
    <div class="h3"><strong>Favorite Job Hunting Websites:</strong></div>
    <div class="row">
        <div class="col-xs-8">
            <div class="input-group input-group-sm">
                <span class="input-group-addon">@Html.DisplayNameFor(model=>model.url)</span>
                @Html.TextAreaFor(model=>model.url, new { @class="form-control", id="url" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-8">
            @Html.DropDownList("urls", (SelectList)@ViewBag.options, new{ @class="form-control top2", id="website", size="8" })
            <button class="btn btn-primary btn-sm top2" id="urlbutton">OpenBrowser</button>
        </div>
    </div>
    @*
    <br />
    <br />
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReleaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rating)
            </th>

            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>

                <td>
                    @Html.ActionLink("Edit", "Edit", new {id = item.ID}) |
                    @Html.ActionLink("Details", "Details", new {id = item.ID}) |
                    @Html.ActionLink("Delete", "Delete", new {id = item.ID})
                </td>
            </tr>
        }

    </table>
    *@
}
